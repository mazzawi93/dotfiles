#!/bin/bash
set -e

# Colony Project tmux session setup script
# Creates or attaches to a tmux session with predefined windows

# Session name
SESSION_NAME="colony"

# Project directory - assumes same location across machines
PROJECT_DIR="$HOME/colony-unified-monorepo"

# Check if the directory exists
if [ ! -d "$PROJECT_DIR" ]; then
  echo "❌ Error: Project directory $PROJECT_DIR does not exist"
  exit 1
fi

# Function to create a new session if it doesn't exist
create_session() {
  echo "🚀 Creating new tmux session: $SESSION_NAME"
  
  # Start a new tmux session
  tmux new-session -d -s "$SESSION_NAME" -c "$PROJECT_DIR"
  
  # Rename the first window to "nvim"
  tmux rename-window -t "$SESSION_NAME:1" "nvim"
  
  # Start neovim in the first window
  tmux send-keys -t "$SESSION_NAME:1" "cd $PROJECT_DIR && nvim ." C-m
  
  # Create a window for git operations
  tmux new-window -t "$SESSION_NAME:2" -n "git" -c "$PROJECT_DIR"
  tmux send-keys -t "$SESSION_NAME:2" "cd $PROJECT_DIR && git status" C-m
  
  # Create a window for Claude Code
  tmux new-window -t "$SESSION_NAME:3" -n "claude" -c "$PROJECT_DIR"
  tmux send-keys -t "$SESSION_NAME:3" "cd $PROJECT_DIR && claude" C-m
  
  # Return to the first window
  tmux select-window -t "$SESSION_NAME:1"
}

# Check if the session already exists
if tmux has-session -t "$SESSION_NAME" 2>/dev/null; then
  echo "🔗 Attaching to existing session: $SESSION_NAME"
  tmux attach-session -t "$SESSION_NAME"
else
  # Create a new session and attach to it
  create_session
  tmux attach-session -t "$SESSION_NAME"
fi